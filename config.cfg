# total number of valid instructions to generate (exculding those generated by check_flip)
TOTAL_INSTRUCTIONS = 100
# number of instructions to send per batch to client
BATCH_SIZE = 10

# General-purpose registers
GPRs = 0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
# Floating-point registers
FREGs = 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
# Vector registers
VREGs = 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31

# Special registers
SPECIAL_GPRS = 0,1,2,31
SPECIAL_FPRS = 0,1,31
SPECIAL_VREGS = 0,1,31
SPECIAL_SIMMS = 0,1,-1,2047,-2048
SPECIAL_UIMMS = 0,1,4095,4096,1024

# Special probabilities
GPR_SPECIAL = 0.2
FPR_SPECIAL = 0.2
VREG_SPECIAL = 0.3
IMM_SPECIAL = 0.875

# Endian and flip configurations
# probabilty to flip endianness 
ENDIAN_PROBABILITY = 0.5
# probability that bits flipping occurs
FLIP_PROBABILITY = 0.5
# max number of bits that could be flipped
MAX_FLIPS = 3

# Biases
# <1 favors higher numbers, >1 favors lower numbers
ZIMM10_BIAS = 0.7

# VLMUL probabilities (flattened)
# these probabilites should add up to 1
VLMUL_PROBABILITIES.Mf8 = 0.21
VLMUL_PROBABILITIES.Mf4 = 0.20
VLMUL_PROBABILITIES.M8  = 0.20
VLMUL_PROBABILITIES.Mf2 = 0.15
VLMUL_PROBABILITIES.M2  = 0.10
VLMUL_PROBABILITIES.M4  = 0.08
VLMUL_PROBABILITIES.M1  = 0.06
